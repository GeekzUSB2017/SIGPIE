(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> "
p3
sS'layer'
p4
S'/home/vero/Escritorio/SIGPIE/applications/SIGPIE/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\nfrom applications.SIGPIE.modules.ubsutils import get_ldap_data\nfrom applications.SIGPIE.modules.ubsutils import random_key\n\nURL_RETORNO = "http%3A%2F%2Flocalhost%3A8000%2FSIGPIE%2Fdefault%2Flogin_cas"\n\n\ndef index():\n\treturn dict()\n\ndef about():\n\tif session.usuario is not None:\n\t\treturn dict()\n\telse:\n\t\tredirect(URL(\'index\'))\n\n\ndef postularse():\n\tif session.usuario is not None:\n\t\tform = SQLFORM.factory(\n\t\t\t\tField(\'carnet\',\'string\', label=\'Carnet\'),\n\t\t\t\tField(\'nombres\',\'string\', label=\'Nombres\'),\n\t\t\t\tField(\'apellidos\',\'string\', label=\'Apellidos\'),\n\t\t\t\tField(\'cedula\',\'string\', label=\'C\xc3\xa9dula\'),\n\t\t\t\tField(\'telefono_habitacion\',\'string\', label=\'Tel\xc3\xa9fono habitaci\xc3\xb3n\'),\n\t\t\t\tField(\'telefono_celular\',\'string\', label=\'Tel\xc3\xa9fono celular\'),\n\t\t\t\tField(\'correo\',\'string\', label=\'Correo\'),\n\t\t\t\tField(\'nacionalidad\',\'string\', label=\'Nacionalidad\'),\n\t\t\t\tField(\'direccion\',\'string\', label=\'Direcci\xc3\xb3n\'),\n\t\t\t\tField(\'pasaporte\',\'string\', label=\'Pasaporte\'))\n\n\t\trows = db(db.estudiante.carnet == session.usuario[\'usbid\']).select()\n\n\t\testudiante = rows.first()\n\t\t\n\t\tform.vars.carnet = estudiante.carnet\n\t\tform.vars.nombres = estudiante.nombres\n\t\tform.vars.apellidos = estudiante.apellidos\n\t\tform.vars.cedula = estudiante.cedula\n\t\tform.vars.correo = session.usuario[\'email\']\n\t\tform.vars.telefono_habitacion = estudiante.telefono_habitacion\n\t\tform.vars.telefono_celular = session.usuario[\'phone\']\n\t\tform.vars.nacionalidad = estudiante.nacionalidad\n\t\tform.vars.direccion = estudiante.direccion\n\t\tform.vars.pasaporte = estudiante.pasaporte\n\n\t\tif form.process().accepted:\n\t\t\t# Actualizar la tabla del estudiante con un carnet especifico\n\t\t\tdb(db.estudiante.carnet == session.usuario[\'usbid\']).update(\n\t\t\t\t\ttelefono_habitacion=form.vars.telefono_habitacion,\n\t\t\t\t\ttelefono_celular=form.vars.telefono_celular,\n\t\t\t\t\tcorreo=form.vars.correo,\n\t\t\t\t\tnacionalidad=form.vars.nacionalidad,\n\t\t\t\t\tdireccion=form.vars.direccion,\n\t\t\t\t\tpasaporte=form.vars.pasaporte)\n\n\t\treturn dict(form_estudiante = form)\t\n\telse:\n\t\tredirect(URL(\'index\'))\n\n\ndef user():\n\treturn dict(login=auth.login())\n\n\ndef register():\n\treturn dict(form=auth.register())\n\ndef form2():\n\tif session.usuario is not None:\n\t\treturn dict()\n\telse:\n\t\tredirect(URL(\'index\'))\n\ndef form3():\n\tif session.usuario is not None:\n\t\treturn dict()\n\telse:\n\t\tredirect(URL(\'index\'))\n\n\ndef welcome():\n\n\tif session.usuario is not None:\n\t\treturn dict(nombre= session.usuario[\'first_name\'])\n\telse:\n\t\tredirect(URL(\'index\'))\n\ndef documentos():\n\tif session.usuario is not None:\n\t\treturn dict()\n\telse:\n\t\tredirect(URL(\'index\'))\n\ndef login_cas():\n\tif not request.vars.getfirst(\'ticket\'):\n\t\t#redirect(URL(\'error\'))\n\t\tpass\n\ttry:\n\t\timport urllib2, ssl\n\t\tssl._create_default_https_context = ssl._create_unverified_context\n\n\t\turl = "https://secure.dst.usb.ve/validate?ticket="+\\\n\t\trequest.vars.getfirst(\'ticket\') + "&service=" + URL_RETORNO\n\n\n\t\treq = urllib2.Request(url)\n\t\tresponse = urllib2.urlopen(req)\n\t\tthe_page = response.read()\n\n\n\texcept Exception, e:\n\t\tprint "Exception: "\n\t\tprint e\n\t\t# redirect(URL(\'error\'))\n\n\tif the_page[0:2] == "no":\n\t\tpass\n\telse:\n\t\tdata  = the_page.split()\n\t\tusbid = data[1]\n\n\t\tusuario = get_ldap_data(usbid) #Se leen los datos del CAS\n\n\t\ttablaUsuarios = db.estudiante\n\n\t\tsession.usuario = usuario\n\t\tsession.usuario[\'usbid\'] = usbid\n\t\ttry:\n\t\t\tprint "Informaci\xc3\xb3n extraida del CAS: "\n\t\t\tprint usuario[\'usbid\']\n\t\t\tprint usuario[\'first_name\']\n\t\t\tprint usuario[\'last_name\']\n\t\t\tprint usuario[\'email\']\n\t\t\tprint usuario[\'cedula\']\n\t\t\tprint usuario[\'phone\']\n\t\t\tprint usuario[\'tipo\']\n\n\n\t\texcept:\n\t\t\tprint(\'Excepci\xc3\xb3n\')\n\t\tif db(tablaUsuarios.carnet == usbid).isempty():\n\n\t\t\tdb.estudiante.insert(cedula=session.usuario["cedula"],  # Lo insertamos en la base de datos.\n\t\t\tcarnet=session.usuario["usbid"],\n\t\t\tnombres=session.usuario["first_name"],\n\t\t\tapellidos=session.usuario["last_name"])\n\n\n\t\t\tprint "se agrego un nuevo usuario"\n\t\t\tredirect(URL(\'welcome\'))\n\n\t\t#ARREGLAR, ESTA DUPLICANDO DATA Y NO ACTUALIZANDO\n\t\telse:\n\n\t\t\tprint "se actualizo un usuario existente"\n\t\t\tredirect(URL(\'welcome\'))\n\ndef logout_cas():\n\tsession.usuario = None\n\tredirect(\'https://secure.dst.usb.ve/logout\')\n\nresponse._vars=response._caller(postularse)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/vero/Escritorio/SIGPIE/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/vero/Escritorio/SIGPIE/applications/SIGPIE/controllers/default.py", line 164, in <module>\n  File "/home/vero/Escritorio/SIGPIE/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/vero/Escritorio/SIGPIE/applications/SIGPIE/controllers/default.py", line 38, in postularse\n    form.vars.nombres = estudiante.nombres\n  File "/home/vero/Escritorio/SIGPIE/gluon/packages/dal/pydal/objects.py", line 90, in __getattr__\n    raise AttributeError\nAttributeError\n'
p11
s.